Method Overloading Vs Method Overriding

Method Overloading	                                          Method Overriding
1. Occurs within a single class/multiple classes.	          Occurs between a parent and child class
2. Involves multiple methods with the same                    Involves a method in the child class with the
   name but different parameters	                          same name and parameters as a method in the parent class
3. Decision is made at compile-time (static binding)	      Decision is made at runtime (dynamic binding)
4. The return type can be the same or different.              The return type must be the same or a subtype in the
                                                              child class
5. No relationship required between the overloaded methods	  Requires an inheritance relationship between the parent
                                                              and child classes
6. Overloaded methods can have different access modifiers	  Overriding methods must have the same or higher access
                                                              modifier in the child class
7. Overloading allows methods with different                  Overriding allows child classes to provide specific
functionality to have the same name                           implementations for inherited methods
8. Method parameters can vary in type, order, or number       Method parameters must have the same type, order,
                                                              and number in both parent and child
9. Method overloading is achieved within a single class       Method overriding is achieved by using the @Override
   by changing the method signature                           annotation in the child class
10. Overloading is a form of compile-time polymorphism	      Overriding is a form of runtime polymorphism


Super keyword in java
Usage of Java super Keyword
1. super can be used to refer immediate parent class instance variable.
2. super can be used to invoke immediate parent class method.
3. super() can be used to invoke immediate parent class constructor.



Final keyword in java
1) final Variables : When a variable is declared as final, its value cannot be changed once it is
initialized. This makes the variable a constant.
2) final Methods : A method declared as final cannot be overridden by subclasses. This is useful
when you want to prevent a subclass from altering the functionality of the parent class's method.
3) final Classes : A class declared as final cannot be extended. This is useful when you want to prevent inheritance,
ensuring that no other class can alter its behavior.
